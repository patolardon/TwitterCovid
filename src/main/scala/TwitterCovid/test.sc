import io.circe.Decoder, io.circe.generic.auto._
import io.circe.parser.decode
import play.api.libs.json._

import play.api.libs.json._
val tweet = """{"schema":{"type":"struct","fields":[{"type":"int64","optional":true,"name":"org.apache.kafka.connect.data.Timestamp","version":1,"doc":"Return the created_at","field":"CreatedAt"},{"type":"int64","optional":true,"doc":"Returns the id of the status","field":"Id"},{"type":"string","optional":true,"doc":"Returns the text of the status","field":"Text"},{"type":"string","optional":true,"doc":"Returns the source","field":"Source"},{"type":"boolean","optional":true,"doc":"Test if the status is truncated","field":"Truncated"},{"type":"int64","optional":true,"doc":"Returns the in_reply_tostatus_id","field":"InReplyToStatusId"},{"type":"int64","optional":true,"doc":"Returns the in_reply_user_id","field":"InReplyToUserId"},{"type":"string","optional":true,"doc":"Returns the in_reply_to_screen_name","field":"InReplyToScreenName"},{"type":"struct","fields":[{"type":"double","optional":false,"doc":"returns the latitude of the geo location","field":"Latitude"},{"type":"double","optional":false,"doc":"returns the longitude of the geo location","field":"Longitude"}],"optional":true,"name":"com.github.jcustenborder.kafka.connect.twitter.GeoLocation","doc":"Returns The location that this tweet refers to if available.","field":"GeoLocation"},{"type":"struct","fields":[{"type":"string","optional":true,"field":"Name"},{"type":"string","optional":true,"field":"StreetAddress"},{"type":"string","optional":true,"field":"CountryCode"},{"type":"string","optional":true,"field":"Id"},{"type":"string","optional":true,"field":"Country"},{"type":"string","optional":true,"field":"PlaceType"},{"type":"string","optional":true,"field":"URL"},{"type":"string","optional":true,"field":"FullName"}],"optional":true,"name":"com.github.jcustenborder.kafka.connect.twitter.Place","doc":"Returns the place attached to this status","field":"Place"},{"type":"boolean","optional":true,"doc":"Test if the status is favorited","field":"Favorited"},{"type":"boolean","optional":true,"doc":"Test if the status is retweeted","field":"Retweeted"},{"type":"int32","optional":true,"doc":"Indicates approximately how many times this Tweet has been \"favorited\" by Twitter users.","field":"FavoriteCount"},{"type":"struct","fields":[{"type":"int64","optional":true,"doc":"Returns the id of the user","field":"Id"},{"type":"string","optional":true,"doc":"Returns the name of the user","field":"Name"},{"type":"string","optional":true,"doc":"Returns the screen name of the user","field":"ScreenName"},{"type":"string","optional":true,"doc":"Returns the location of the user","field":"Location"},{"type":"string","optional":true,"doc":"Returns the description of the user","field":"Description"},{"type":"boolean","optional":true,"doc":"Tests if the user is enabling contributors","field":"ContributorsEnabled"},{"type":"string","optional":true,"doc":"Returns the profile image url of the user","field":"ProfileImageURL"},{"type":"string","optional":true,"field":"BiggerProfileImageURL"},{"type":"string","optional":true,"field":"MiniProfileImageURL"},{"type":"string","optional":true,"field":"OriginalProfileImageURL"},{"type":"string","optional":true,"field":"ProfileImageURLHttps"},{"type":"string","optional":true,"field":"BiggerProfileImageURLHttps"},{"type":"string","optional":true,"field":"MiniProfileImageURLHttps"},{"type":"string","optional":true,"field":"OriginalProfileImageURLHttps"},{"type":"boolean","optional":true,"doc":"Tests if the user has not uploaded their own avatar","field":"DefaultProfileImage"},{"type":"string","optional":true,"doc":"Returns the url of the user","field":"URL"},{"type":"boolean","optional":true,"doc":"Test if the user status is protected","field":"Protected"},{"type":"int32","optional":true,"doc":"Returns the number of followers","field":"FollowersCount"},{"type":"string","optional":true,"field":"ProfileBackgroundColor"},{"type":"string","optional":true,"field":"ProfileTextColor"},{"type":"string","optional":true,"field":"ProfileLinkColor"},{"type":"string","optional":true,"field":"ProfileSidebarFillColor"},{"type":"string","optional":true,"field":"ProfileSidebarBorderColor"},{"type":"boolean","optional":true,"field":"ProfileUseBackgroundImage"},{"type":"boolean","optional":true,"doc":"Tests if the user has not altered the theme or background","field":"DefaultProfile"},{"type":"boolean","optional":true,"field":"ShowAllInlineMedia"},{"type":"int32","optional":true,"doc":"Returns the number of users the user follows (AKA \"followings\")","field":"FriendsCount"},{"type":"int64","optional":true,"name":"org.apache.kafka.connect.data.Timestamp","version":1,"field":"CreatedAt"},{"type":"int32","optional":true,"field":"FavouritesCount"},{"type":"int32","optional":true,"field":"UtcOffset"},{"type":"string","optional":true,"field":"TimeZone"},{"type":"string","optional":true,"field":"ProfileBackgroundImageURL"},{"type":"string","optional":true,"field":"ProfileBackgroundImageUrlHttps"},{"type":"string","optional":true,"field":"ProfileBannerURL"},{"type":"string","optional":true,"field":"ProfileBannerRetinaURL"},{"type":"string","optional":true,"field":"ProfileBannerIPadURL"},{"type":"string","optional":true,"field":"ProfileBannerIPadRetinaURL"},{"type":"string","optional":true,"field":"ProfileBannerMobileURL"},{"type":"string","optional":true,"field":"ProfileBannerMobileRetinaURL"},{"type":"boolean","optional":true,"field":"ProfileBackgroundTiled"},{"type":"string","optional":true,"doc":"Returns the preferred language of the user","field":"Lang"},{"type":"int32","optional":true,"field":"StatusesCount"},{"type":"boolean","optional":true,"field":"GeoEnabled"},{"type":"boolean","optional":true,"field":"Verified"},{"type":"boolean","optional":true,"field":"Translator"},{"type":"int32","optional":true,"doc":"Returns the number of public lists the user is listed on, or -1 if the count is unavailable.","field":"ListedCount"},{"type":"boolean","optional":true,"doc":"Returns true if the authenticating user has requested to follow this user, otherwise false.","field":"FollowRequestSent"},{"type":"array","items":{"type":"string","optional":false},"optional":false,"doc":"Returns the list of country codes where the user is withheld","field":"WithheldInCountries"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.User","doc":"Return the user associated with the status. This can be null if the instance is from User.getStatus().","field":"User"},{"type":"boolean","optional":true,"field":"Retweet"},{"type":"array","items":{"type":"int64","optional":false},"optional":false,"doc":"Returns an array of contributors, or null if no contributor is associated with this status.","field":"Contributors"},{"type":"int32","optional":true,"doc":"Returns the number of times this tweet has been retweeted, or -1 when the tweet was created before this feature was enabled.","field":"RetweetCount"},{"type":"boolean","optional":true,"field":"RetweetedByMe"},{"type":"int64","optional":true,"doc":"Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created before this feature was enabled.","field":"CurrentUserRetweetId"},{"type":"boolean","optional":true,"field":"PossiblySensitive"},{"type":"string","optional":true,"doc":"Returns the lang of the status text if available.","field":"Lang"},{"type":"array","items":{"type":"string","optional":false},"optional":false,"doc":"Returns the list of country codes where the tweet is withheld","field":"WithheldInCountries"},{"type":"array","items":{"type":"struct","fields":[{"type":"string","optional":true,"doc":"Returns the text of the hashtag without #.","field":"Text"},{"type":"int32","optional":true,"doc":"Returns the index of the start character of the hashtag.","field":"Start"},{"type":"int32","optional":true,"doc":"Returns the index of the end character of the hashtag.","field":"End"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.HashtagEntity","doc":""},"optional":true,"doc":"Returns an array if hashtag mentioned in the tweet.","field":"HashtagEntities"},{"type":"array","items":{"type":"struct","fields":[{"type":"string","optional":true,"doc":"Returns the name mentioned in the status.","field":"Name"},{"type":"int64","optional":true,"doc":"Returns the user id mentioned in the status.","field":"Id"},{"type":"string","optional":true,"doc":"Returns the screen name mentioned in the status.","field":"Text"},{"type":"string","optional":true,"doc":"Returns the screen name mentioned in the status.","field":"ScreenName"},{"type":"int32","optional":true,"doc":"Returns the index of the start character of the user mention.","field":"Start"},{"type":"int32","optional":true,"doc":"Returns the index of the end character of the user mention.","field":"End"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.UserMentionEntity","doc":""},"optional":true,"doc":"Returns an array of user mentions in the tweet.","field":"UserMentionEntities"},{"type":"array","items":{"type":"struct","fields":[{"type":"int64","optional":true,"doc":"Returns the id of the media.","field":"Id"},{"type":"string","optional":true,"doc":"Returns the media type photo, video, animated_gif.","field":"Type"},{"type":"string","optional":true,"doc":"Returns the media URL.","field":"MediaURL"},{"type":"map","keys":{"type":"int32","optional":false},"values":{"type":"struct","fields":[{"type":"int32","optional":true,"doc":"","field":"Resize"},{"type":"int32","optional":true,"doc":"","field":"Width"},{"type":"int32","optional":true,"doc":"","field":"Height"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.MediaEntity.Size","doc":""},"optional":false,"field":"Sizes"},{"type":"string","optional":true,"doc":"Returns the media secure URL.","field":"MediaURLHttps"},{"type":"int32","optional":true,"doc":"","field":"VideoAspectRatioWidth"},{"type":"int32","optional":true,"doc":"","field":"VideoAspectRatioHeight"},{"type":"int64","optional":true,"doc":"","field":"VideoDurationMillis"},{"type":"array","items":{"type":"struct","fields":[{"type":"string","optional":true,"doc":"","field":"Url"},{"type":"int32","optional":true,"doc":"","field":"Bitrate"},{"type":"string","optional":true,"doc":"","field":"ContentType"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.ExtendedMediaEntity.Variant","doc":""},"optional":true,"doc":"Returns size variations of the media.","field":"VideoVariants"},{"type":"string","optional":true,"doc":"","field":"ExtAltText"},{"type":"string","optional":true,"doc":"Returns the URL mentioned in the tweet.","field":"URL"},{"type":"string","optional":true,"doc":"Returns the URL mentioned in the tweet.","field":"Text"},{"type":"string","optional":true,"doc":"Returns the expanded URL if mentioned URL is shorten.","field":"ExpandedURL"},{"type":"int32","optional":true,"doc":"Returns the index of the start character of the URL mentioned in the tweet.","field":"Start"},{"type":"int32","optional":true,"doc":"Returns the index of the end character of the URL mentioned in the tweet.","field":"End"},{"type":"string","optional":true,"doc":"Returns the display URL if mentioned URL is shorten.","field":"DisplayURL"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.MediaEntity","doc":""},"optional":true,"doc":"Returns an array of MediaEntities if medias are available in the tweet.","field":"MediaEntities"},{"type":"array","items":{"type":"struct","fields":[{"type":"int32","optional":true,"doc":"Returns the index of the start character of the symbol.","field":"Start"},{"type":"int32","optional":true,"doc":"Returns the index of the end character of the symbol.","field":"End"},{"type":"string","optional":true,"doc":"Returns the text of the entity","field":"Text"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.SymbolEntity","doc":""},"optional":true,"doc":"Returns an array of SymbolEntities if medias are available in the tweet.","field":"SymbolEntities"},{"type":"array","items":{"type":"struct","fields":[{"type":"string","optional":true,"doc":"Returns the URL mentioned in the tweet.","field":"URL"},{"type":"string","optional":true,"doc":"Returns the URL mentioned in the tweet.","field":"Text"},{"type":"string","optional":true,"doc":"Returns the expanded URL if mentioned URL is shorten.","field":"ExpandedURL"},{"type":"int32","optional":true,"doc":"Returns the index of the start character of the URL mentioned in the tweet.","field":"Start"},{"type":"int32","optional":true,"doc":"Returns the index of the end character of the URL mentioned in the tweet.","field":"End"},{"type":"string","optional":true,"doc":"Returns the display URL if mentioned URL is shorten.","field":"DisplayURL"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.URLEntity","doc":""},"optional":true,"doc":"Returns an array if URLEntity mentioned in the tweet.","field":"URLEntities"}],"optional":false,"name":"com.github.jcustenborder.kafka.connect.twitter.Status","doc":"Twitter status message."},"payload":{"CreatedAt":1586525317000,"Id":1248603797330333697,"Text":"RT @satishacharya: The next battle! #coronavirus  #recession https://t.co/GEkSVZyhQf","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","Truncated":false,"InReplyToStatusId":-1,"InReplyToUserId":-1,"InReplyToScreenName":null,"GeoLocation":null,"Place":null,"Favorited":false,"Retweeted":false,"FavoriteCount":0,"User":{"Id":2365447274,"Name":"jyothi","ScreenName":"jyothi_mirdoddi","Location":"Hyderabad","Description":null,"ContributorsEnabled":false,"ProfileImageURL":"http://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png","BiggerProfileImageURL":"http://abs.twimg.com/sticky/default_profile_images/default_profile_bigger.png","MiniProfileImageURL":"http://abs.twimg.com/sticky/default_profile_images/default_profile_mini.png","OriginalProfileImageURL":"http://abs.twimg.com/sticky/default_profile_images/default_profile.png","ProfileImageURLHttps":"https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png","BiggerProfileImageURLHttps":"https://abs.twimg.com/sticky/default_profile_images/default_profile_bigger.png","MiniProfileImageURLHttps":"https://abs.twimg.com/sticky/default_profile_images/default_profile_mini.png","OriginalProfileImageURLHttps":"https://abs.twimg.com/sticky/default_profile_images/default_profile.png","DefaultProfileImage":false,"URL":null,"Protected":false,"FollowersCount":7,"ProfileBackgroundColor":"C0DEED","ProfileTextColor":"333333","ProfileLinkColor":"1DA1F2","ProfileSidebarFillColor":"DDEEF6","ProfileSidebarBorderColor":"C0DEED","ProfileUseBackgroundImage":true,"DefaultProfile":true,"ShowAllInlineMedia":false,"FriendsCount":497,"CreatedAt":1393585703000,"FavouritesCount":1238,"UtcOffset":-1,"TimeZone":null,"ProfileBackgroundImageURL":"http://abs.twimg.com/images/themes/theme1/bg.png","ProfileBackgroundImageUrlHttps":"https://abs.twimg.com/images/themes/theme1/bg.png","ProfileBannerURL":null,"ProfileBannerRetinaURL":null,"ProfileBannerIPadURL":null,"ProfileBannerIPadRetinaURL":null,"ProfileBannerMobileURL":null,"ProfileBannerMobileRetinaURL":null,"ProfileBackgroundTiled":false,"Lang":null,"StatusesCount":120,"GeoEnabled":false,"Verified":false,"Translator":false,"ListedCount":0,"FollowRequestSent":false,"WithheldInCountries":[]},"Retweet":true,"Contributors":[],"RetweetCount":0,"RetweetedByMe":false,"CurrentUserRetweetId":-1,"PossiblySensitive":false,"Lang":"en","WithheldInCountries":[],"HashtagEntities":[{"Text":"coronavirus","Start":36,"End":48},{"Text":"recession","Start":50,"End":60}],"UserMentionEntities":[{"Name":"Satish Acharya","Id":25106021,"Text":"satishacharya","ScreenName":"satishacharya","Start":3,"End":17}],"MediaEntities":[{"Id":1248597628129914880,"Type":"photo","MediaURL":"http://pbs.twimg.com/media/EVPo7WwUMAA48eA.jpg","Sizes":[[0,{"Resize":101,"Width":150,"Height":150}],[1,{"Resize":100,"Width":680,"Height":558}],[2,{"Resize":100,"Width":1141,"Height":936}],[3,{"Resize":100,"Width":1141,"Height":936}]],"MediaURLHttps":"https://pbs.twimg.com/media/EVPo7WwUMAA48eA.jpg","VideoAspectRatioWidth":0,"VideoAspectRatioHeight":0,"VideoDurationMillis":0,"VideoVariants":[],"ExtAltText":null,"URL":"https://t.co/GEkSVZyhQf","Text":"https://t.co/GEkSVZyhQf","ExpandedURL":"https://twitter.com/satishacharya/status/1248597730827501568/photo/1","Start":61,"End":84,"DisplayURL":"pic.twitter.com/GEkSVZyhQf"}],"SymbolEntities":[],"URLEntities":[]}}"""



val malist = Json.parse(tweet)("payload")("HashtagEntities").toString()

println(malist)
